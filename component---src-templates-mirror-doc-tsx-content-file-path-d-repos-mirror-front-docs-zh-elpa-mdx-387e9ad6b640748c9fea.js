"use strict";(self.webpackChunkzju_mirror=self.webpackChunkzju_mirror||[]).push([[4437],{2072:function(e,t,l){l.r(t),l.d(t,{default:function(){return k}});var n=l(1151),a=l(9748);function u(e){const t=Object.assign({p:"p",code:"code",ul:"ul",li:"li",pre:"pre",h3:"h3",h4:"h4",a:"a"},(0,n.ah)(),e.components);return a.default.createElement(a.default.Fragment,null,a.default.createElement(t.p,null,"ELPA 是 Emacs 内建包管理器 ",a.default.createElement(t.code,null,"package.el")," 的软件源，镜像站支持了如下 ELPA ："),"\n",a.default.createElement(t.ul,null,"\n",a.default.createElement(t.li,null,"gnu"),"\n",a.default.createElement(t.li,null,"gnu-devel"),"\n",a.default.createElement(t.li,null,"melpa"),"\n",a.default.createElement(t.li,null,"nongnu"),"\n",a.default.createElement(t.li,null,"nongnu-devel"),"\n",a.default.createElement(t.li,null,"org"),"\n",a.default.createElement(t.li,null,"stable-melpa"),"\n"),"\n",a.default.createElement(t.p,null,"根据你的需求，设置 package-archives，比如用 GNU ELPA 和 MELPA："),"\n",a.default.createElement(t.pre,null,a.default.createElement(t.code,{className:"language-lisp"},'(setq package-archives \'(("gnu"    . "https://mirrors.zju.edu.cn/elpa/gnu/")\n                         ("nongnu" . "https://mirrors.zju.edu.cn/elpa/nongnu/")\n                         ("melpa"  . "https://mirrors.zju.edu.cn/elpa/melpa/")))\n(package-initialize) ;; You might already have this line\n')),"\n",a.default.createElement(t.h3,null,"Spacemacs 用户"),"\n",a.default.createElement(t.h4,null,"master 分支"),"\n",a.default.createElement(t.p,null,"添加下面的代码到",a.default.createElement(t.code,null,".spacemacs"),"的",a.default.createElement(t.code,null,"dotspacemacs/user-init()")),"\n",a.default.createElement(t.pre,null,a.default.createElement(t.code,{className:"language-lisp"},'(setq configuration-layer--elpa-archives\n    \'(("melpa-cn" . "https://mirrors.zju.edu.cn/elpa/melpa/")\n      ("org-cn"   . "https://mirrors.zju.edu.cn/elpa/org/")\n      ("gnu-cn"   . "https://mirrors.zju.edu.cn/elpa/gnu/")))\n')),"\n",a.default.createElement(t.h4,null,"develop 分支"),"\n",a.default.createElement(t.p,null,"使用 ",a.default.createElement(t.code,null,"configuration-layer-elpa-archives")," 代替原来的 ",a.default.createElement(t.code,null,"configuration-layer--elpa-archives")," （ ",a.default.createElement(t.code,null,"--")," 换成 ",a.default.createElement(t.code,null,"-")," ）"),"\n",a.default.createElement(t.pre,null,a.default.createElement(t.code,{className:"language-lisp"},'(setq configuration-layer-elpa-archives\n    \'(("melpa-cn" . "https://mirrors.zju.edu.cn/elpa/melpa/")\n      ("org-cn"   . "https://mirrors.zju.edu.cn/elpa/org/")\n      ("gnu-cn"   . "https://mirrors.zju.edu.cn/elpa/gnu/")))\n')),"\n",a.default.createElement(t.h3,null,"Cask 用户"),"\n",a.default.createElement(t.p,null,a.default.createElement(t.a,{href:"https://github.com/cask/cask"},"Cask")," 是一个 Emacs Lisp 的项目管理工具。这里还是以 GNU ELPA 和 MELPA 为例，在添加下面的代码到 Cask"),"\n",a.default.createElement(t.pre,null,a.default.createElement(t.code,{className:"language-lisp"},'(source "gnu"   "https://mirrors.zju.edu.cn/elpa/gnu/")\n(source "melpa" "https://mirrors.zju.edu.cn/elpa/melpa/")\n')),"\n",a.default.createElement(t.h3,null,"关于 ELPA 的选择"),"\n",a.default.createElement(t.p,null,"(来自",a.default.createElement(t.a,{href:"https://github.com/xuchunyang"},"@xuchunyang"),")"),"\n",a.default.createElement(t.p,null,"假如不清楚需要用哪些 ELPA 的话"),"\n",a.default.createElement(t.ul,null,"\n",a.default.createElement(t.li,null,a.default.createElement(t.code,null,"gnu")," 一般是必备的，其它的 elpa 中的包会依赖 ",a.default.createElement(t.code,null,"gnu")," 中的包"),"\n",a.default.createElement(t.li,null,a.default.createElement(t.code,null,"nongnu")," 建议启用，类似于 ",a.default.createElement(t.code,null,"melpa")," 但是 Emacs 官方维护的"),"\n",a.default.createElement(t.li,null,a.default.createElement(t.code,null,"melpa")," 滚动升级，收录了的包的数量最大"),"\n",a.default.createElement(t.li,null,a.default.createElement(t.code,null,"stable-melpa")," 依据源码的 Tag（Git）升级，数量比 ",a.default.createElement(t.code,null,"melpa")," 少，因为很多包作者根本不打 Tag"),"\n",a.default.createElement(t.li,null,a.default.createElement(t.code,null,"org")," 仅仅为了 ",a.default.createElement(t.code,null,"org-plus-contrib")," 这一个包，org 重度用户使用"),"\n",a.default.createElement(t.li,null,a.default.createElement(t.code,null,"gnu-devel")," 收录 ",a.default.createElement(t.code,null,"gnu")," 中的包的开发中版本，一般不必启用（与 ",a.default.createElement(t.code,null,"gnu")," 的关系类似于 ",a.default.createElement(t.code,null,"melpa")," 与 ",a.default.createElement(t.code,null,"stable-melpa")," 的关系）"),"\n",a.default.createElement(t.li,null,a.default.createElement(t.code,null,"nongnu-devel")," 收录 ",a.default.createElement(t.code,null,"nongnu")," 中的包的开发中版本，一般不必启用"),"\n"),"\n",a.default.createElement(t.h3,null,"上游"),"\n",a.default.createElement(t.p,null,"本文档参考了 ",a.default.createElement(t.a,{href:"http://elpa.emacs-china.org/"},"http://elpa.emacs-china.org/")," 提供的帮助。"),"\n",a.default.createElement(t.h3,null,"URL Bug"),"\n",a.default.createElement(t.p,null,"各个仓库的 URL 末尾一定要加",a.default.createElement(t.code,null,"/"),"，否则会无法拉取，提示",a.default.createElement(t.code,null,"Failed to download melpa archive"),"。"),"\n",a.default.createElement(t.p,null,"事实上，末尾没有",a.default.createElement(t.code,null,"/"),"的话，emacs 会去尝试取以下链接："),"\n",a.default.createElement(t.pre,null,a.default.createElement(t.code,{className:"language-plaintext"},"https://mirrors.zju.edu.cn/elpa/melpaarchive-contents\n")),"\n",a.default.createElement(t.p,null,"而正常的链接应该是"),"\n",a.default.createElement(t.pre,null,a.default.createElement(t.code,{className:"language-plaintext"},"https://mirrors.zju.edu.cn/elpa/melpa/archive-contents\n")),"\n",a.default.createElement(t.p,null,"这个是 emacs 自己的 bug。在 ",a.default.createElement(t.a,{href:"https://github.com/melpa/melpa/issues/2139"},"https://github.com/melpa/melpa/issues/2139")," 中有描述。"))}var r=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,n.ah)(),e.components);return t?a.default.createElement(t,e,a.default.createElement(u,e)):u(e)},c=l(5512),m=l(1508),d=l(5725),o=l(2658),s=l(4680),i=l(7782),f=l(2834),p=l(625),E=l(2795),g=l(4001),h=l(1441),v=l(4046),Z=l(6884),x=l(3623),j=l(7950),y=l(2351),z=l(1304);const b=e=>{var t,l,u,r;let{data:b,children:k}=e;const{language:w}=(0,i.useI18next)(),P={id:b.document.frontmatter.mirrorId,name:{zh:"",en:""},status:"unknown"},L=b.document.frontmatter.mirrorId,{0:I,1:A}=(0,a.useState)((0,j.t)("mirrors_"+L,P));(0,a.useEffect)((()=>{(async function(e){const t=await fetch("/api/mirrors/"+e);if(!t.ok)throw new Error("API call failed: "+t.status+" "+await t.text());const l=await t.json();return(0,j.v)("mirrors_"+e,l),l})(L).then((e=>A(e))).catch((e=>console.error(e)))}),[]);const C="/"+L,N=(0,y.G)(null!==(t=I.url)&&void 0!==t?t:C,!1),U=I.name[w];return a.default.createElement(m.Z,{sx:{minHeight:"100vh",display:"flex",flexDirection:"column",justifyContent:"space-between"}},a.default.createElement(g.Z,{title:U+" | ZJU Mirror"}),a.default.createElement(m.Z,null,a.default.createElement(m.Z,{sx:{px:{xs:4,sm:8},py:4},position:"relative"},a.default.createElement(d.ZP,{container:!0,direction:"column",spacing:4,justifyContent:"flex-start",alignItems:"flex-start"},a.default.createElement(d.ZP,{item:!0,sx:{width:"100%"}},a.default.createElement(d.ZP,{container:!0,justifyContent:"space-between"},a.default.createElement(Z.r,{color:"primary",underline:"hover",to:"/"},a.default.createElement(o.Z,{variant:"h5",component:"div",color:"primary"},a.default.createElement(i.Trans,null,"ZJU Mirror"))),a.default.createElement(d.ZP,{item:!0},a.default.createElement(v.Z,null))),a.default.createElement(m.Z,{sx:{mt:4,display:"flex",flexDirection:"row",alignItems:"center"}}),a.default.createElement(o.Z,{variant:"h2",fontWeight:400,component:"div"},U),a.default.createElement(d.ZP,{container:!0,direction:"row",justifyContent:"flex-start",alignItems:"center"},a.default.createElement(m.Z,{sx:{mr:1}},a.default.createElement(h.Z,{status:I.status})),a.default.createElement(o.Z,{variant:"subtitle1",component:"div",color:"text.disabled",display:"cached"===I.status?"none":"block"},a.default.createElement(i.Trans,null,"最近更新于"," ",{date:new Date(1e3*I.lastUpdated).toLocaleString(w)})))),(null!==(l=null===(u=I.files)||void 0===u?void 0:u.length)&&void 0!==l?l:0)>0&&a.default.createElement(d.ZP,{item:!0,width:"100%"},a.default.createElement(m.Z,null,a.default.createElement(o.Z,{gutterBottom:!0,variant:"h5",component:"div"},a.default.createElement(i.Trans,null,"安装映像")),a.default.createElement(E.Z,{files:I.files||[]}))),!(null!==(r=b.document.frontmatter)&&void 0!==r&&r.isGit)&&a.default.createElement(d.ZP,{item:!0},a.default.createElement(f.zx,{color:"primary",size:"medium",variant:"contained",startIcon:a.default.createElement(c.Z,null),to:N},a.default.createElement(i.Trans,null,"文件列表")))),a.default.createElement(m.Z,{sx:{position:"fixed",top:"6rem",right:{xs:"-4rem",sm:"5rem"},zIndex:-1}},(0,z.Z)(L,"rgb(71 123 210 / 23%)","20rem"))),a.default.createElement(m.Z,{zIndex:1,position:"sticky"},a.default.createElement(s.Z,{sx:{px:{xs:4,sm:8},py:4},elevation:0},a.default.createElement(n.Zo,{components:x.Z},k)))),a.default.createElement(p.Z,null))};function k(e){return a.default.createElement(b,e,a.default.createElement(r,e))}}}]);
//# sourceMappingURL=component---src-templates-mirror-doc-tsx-content-file-path-d-repos-mirror-front-docs-zh-elpa-mdx-387e9ad6b640748c9fea.js.map